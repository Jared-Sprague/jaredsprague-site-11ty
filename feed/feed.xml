<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
	<title>Jared Sprague</title>
	<subtitle>This is my personal log of games, projects, talks, and stuff that interests me.</subtitle>
	
	<link href="https://jaredsprague.com/feed/feed.xml" rel="self"/>
	<link href="https://jaredsprague.com/"/>
	<updated>2021-03-01T18:39:18Z</updated>
	<id>https://jaredsprague.com/</id>
	<author>
		<name>Jared Sprague</name>
		<email>jared@jaredsprague.com</email>
	</author>
	
	<entry>
		<title>New Relic FutureStack 2017 New York</title>
		<link href="https://jaredsprague.com/talks/FutureStack-2017/"/>
		<updated>2017-07-13T18:39:18Z</updated>
		<id>https://jaredsprague.com/talks/FutureStack-2017/</id>
		<content type="html">&lt;p&gt;&lt;img src=&quot;https://jaredsprague.com/img/talks/FS17_browsyn.jpeg&quot; alt=&quot;FutureStack 2017&quot; title=&quot;FutureStack 2017&quot; class=&quot;post-image&quot; /&gt;&lt;/p&gt;
&lt;h2&gt;Talk Abstract&lt;/h2&gt;
&lt;p&gt;Good user experience starts with digital experience monitoring. In this talk I go into why monitoring from the users point of view is critical for availability and user experience. Using Synthetic and Real User monitoring.&lt;/p&gt;
&lt;h2&gt;Video&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=tnMYZ7gryrU&quot;&gt;https://www.youtube.com/watch?v=tnMYZ7gryrU&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Download The Slides&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://jaredsprague.com/files/FS-deck-PDF.pdf&quot;&gt;Slides PDF&lt;/a&gt;&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>p5.js image zoom example</title>
		<link href="https://jaredsprague.com/posts/p5-js-image-zoom-example/"/>
		<updated>2017-10-26T23:26:55Z</updated>
		<id>https://jaredsprague.com/posts/p5-js-image-zoom-example/</id>
		<content type="html">&lt;p&gt;I created this little example to as part of a &lt;a href=&quot;https://github.com/processing/p5.js/issues/942&quot;&gt;pull request&lt;/a&gt; I made to the p5.js library to add more parameters to the &lt;a href=&quot;https://p5js.org/reference/#/p5/image&quot;&gt;image()&lt;/a&gt; function. It shows the power of using all parameters of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/drawImage&quot;&gt;drawImage()&lt;/a&gt; function in HTML5 by using a zoom rectangle to find hidden objects in a painting. &lt;a href=&quot;https://github.com/Jared-Sprague/zoom-image&quot;&gt;Source code&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a href=&quot;https://jaredsprague.com/experiments/p5/zoom-image&quot;&gt;Live demo &amp;gt;&amp;gt;&lt;/a&gt;&lt;/h2&gt;
</content>
	</entry>
	
	<entry>
		<title>p5.js Benchmark System</title>
		<link href="https://jaredsprague.com/posts/p5-js-Benchmark-System/"/>
		<updated>2017-11-05T18:39:18Z</updated>
		<id>https://jaredsprague.com/posts/p5-js-Benchmark-System/</id>
		<content type="html">&lt;p&gt;&lt;img src=&quot;https://jaredsprague.com/img/benchmark.jpg&quot; alt=&quot;alt text&quot; title=&quot;Code&quot; /&gt;&lt;/p&gt;
&lt;p&gt;I was browsing the open &lt;a href=&quot;https://github.com/processing/p5.js/issues/1524&quot;&gt;p5.js&lt;/a&gt; issues when I stubbled across &lt;a href=&quot;https://github.com/processing/p5.js/issues/1524&quot;&gt;this one&lt;/a&gt;. There was an open request to add performance benchmarking to the p5.js development tools, that would run benchmarks in multiple real browsers. The goal was to know when performance optimizations were really helping or adding unnecessary complexity.  That looked like a fun problem to work on.  Since performance testing is one thing I really love doing, I decided to take it on.  I learned A lot in the process.  This post explains the main parts of the of the system I put together,  using existing plugins.  It is copied from the &lt;a href=&quot;https://github.com/processing/p5.js/wiki/Benchmarking-p5.js&quot;&gt;article on the p5.js wiki&lt;/a&gt; .&lt;/p&gt;
&lt;h1&gt;Benchmarking p5.js&lt;/h1&gt;
&lt;p&gt;We have a grunt task that runs performance benchmarks in multiple real browsers on the developers local machine. It will automatically detect which browsers are installed from the following list (Chrome, Firefox, Safari, Edge, IE) and run the benchmarks in all installed browsers and report the results.&lt;/p&gt;
&lt;p&gt;Our benchmarking system consists of 3 main components:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://benchmarkjs.com/&quot;&gt;Benchmark.js&lt;/a&gt; - the engine that runs the benchmarks and the framework for defining benchmarks.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/karma-benchmark&quot;&gt;karma-benchmark&lt;/a&gt; - The karma plugin for launching and running the benchmarks in multiple real browsers.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/grunt-karma&quot;&gt;grunt-karma&lt;/a&gt; - The grunt plugin that allows us to define different karma configuations per grunt command.  This allows us to run single benchmarks or groups of benchmarks.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Basic instructions:&lt;/h2&gt;
&lt;h3&gt;Install the new dependancies&lt;/h3&gt;
&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;npm install&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Do a build, the benchmarks expect a local build of p5.js and p5.min.js&lt;/h3&gt;
&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;grunt&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Run a specific benchmark&lt;/h3&gt;
&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;grunt karma:&lt;target_benchmark&gt;&lt;/target_benchmark&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;To run all the benchmarks&lt;/h3&gt;
&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;grunt karma&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Example&lt;/h3&gt;
&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;grunt karma:random-dev&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Outputs:&lt;/p&gt;
&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;Chrome 62.0.3202 (Linux 0.0.0)&lt;br /&gt;  p5 random() vs Math.random(): Math.random() at 95811115 ops/sec (1.26x faster than p5 random())&lt;br /&gt;Firefox 56.0.0 (Fedora 0.0.0)&lt;br /&gt;  p5 random() vs Math.random(): Math.random() at 2367566507 ops/sec (1.14x faster than p5 random())&lt;br /&gt;&lt;br /&gt;Done, without errors.&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Adding new benchmarks&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Create a new benchmark file at this path and name format:  bench/*.bench.js&lt;/li&gt;
&lt;li&gt;Write the benchmark here is documentation &lt;a href=&quot;https://github.com/JamieMason/karma-benchmark/blob/master/README.md&quot;&gt;karma-benchmark&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Add the benchmark target to &lt;code&gt;grunt-karma.js&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Example benchmark [random-fe-off.bench.js]&lt;/h3&gt;
&lt;p&gt;Here is an example benchmark that compares p5 random() to Math.random() with Friendly Error System disabled. It has two suites one for instanced mode and one using the global window random().&lt;/p&gt;
&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;p5&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;disableFriendlyErrors &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; p5Inst &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;p5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;/**&lt;br /&gt; *  Instance random() vs Math.random()&lt;br /&gt; */&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;suite&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Friendly Errors: OFF, Instance random() vs Math.random()&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token function&quot;&gt;benchmark&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Instance random()&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; p5Inst&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token function&quot;&gt;benchmark&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Math.random()&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; Math&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;/**&lt;br /&gt; *  Window random() vs Math.random()&lt;br /&gt; */&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;suite&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Friendly Errors: OFF, Window random() vs Math.random()&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token function&quot;&gt;benchmark&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;window random()&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;  &lt;span class=&quot;token function&quot;&gt;benchmark&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;Math.random()&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; Math&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then you would need to add your new benchmark to &lt;code&gt;grunt-karma.js&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;&#39;random-fe-off-dev&#39;: {&lt;br /&gt;    options: {&lt;br /&gt;      files: [&lt;br /&gt;        &#39;lib/p5.js&#39;,&lt;br /&gt;        &#39;bench/math/random-fe-off.bench.js&#39;&lt;br /&gt;      ]&lt;br /&gt;    }&lt;br /&gt;  }&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now you can run your new benchmark with:&lt;/p&gt;
&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;grunt karma:random-fe-off-dev&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Comparing Prod to Dev&lt;/h2&gt;
&lt;p&gt;karma-benchmark can load remote files.  So it&#39;s easy to include the p5.js prod build and compare it to the dev build.  This is important when you&#39;re working on improving performance to compare your changes to what is in production.   To do this simply make two targets in &lt;code&gt;grunt-karma.js&lt;/code&gt; one for prod and one for dev.&lt;/p&gt;
&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;  &#39;random-prod&#39;: {&lt;br /&gt;    options: {&lt;br /&gt;      files: [&lt;br /&gt;        &#39;https://cdnjs.cloudflare.com/ajax/libs/p5.js/&lt;%= pkg.version %&gt;/p5.js&#39;,&lt;br /&gt;        &#39;bench/random.bench.js&#39;,&lt;br /&gt;      ],&lt;br /&gt;    },&lt;br /&gt;  },&lt;br /&gt;  &#39;random-dev&#39;: {&lt;br /&gt;    options: {&lt;br /&gt;      files: [&lt;br /&gt;        &#39;lib/p5.js&#39;,&lt;br /&gt;        &#39;bench/random.bench.js&#39;,&lt;br /&gt;      ],&lt;br /&gt;    },&lt;br /&gt;  },&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can see that &lt;code&gt;random-prod&lt;/code&gt; actually loads the latest build from CDN.  Then to compare you can run both targets using:&lt;/p&gt;
&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;grunt karma:random-prod karma:random-dev&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Notes&lt;/h2&gt;
&lt;p&gt;I chose to put the grunt-karma tasks in it&#39;s own file &lt;code&gt;grunt-karma.js&lt;/code&gt;  instead of the main &lt;code&gt;Gruntfile.js&lt;/code&gt;, because as we add more benchmarks overtime the file could grow quite long, and I wanted to keep the main Gruntfile clean.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
		<title>Zorbio</title>
		<link href="https://jaredsprague.com/games/zorbio/"/>
		<updated>2021-03-01T18:39:18Z</updated>
		<id>https://jaredsprague.com/games/zorbio/</id>
		<content type="html">&lt;p&gt;&lt;img src=&quot;https://jaredsprague.com/img/zorbio_header.png&quot; alt=&quot;Zorbio&quot; title=&quot;Zorbio&quot; class=&quot;post-image&quot; /&gt;&lt;/p&gt;
&lt;p&gt;A multiplayer game made with Node.js and Three.js&lt;/p&gt;
</content>
	</entry>
</feed>
